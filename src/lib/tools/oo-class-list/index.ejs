<%- htmlWebpackPlugin.options.docsHead %>

<title>Global Object-Oriented Classes</title>
<div class="documentation contain">
  <section>
  <h1>Legos</h1>
    <p>"The focus of OOCSS is the idea of treating page elements as objects, giving all these objects classes, treating objectsâ€™ classes as single entities in style sheets, and taking it from there."</p>
    <p>Writing CSS outside of the head of your document causes a scenario where a page must be re-rendered as the CSS is encoutered. One way to bypass this is to create massive/unwieldly blocks of super specific CSS that only apply to one thing on the page. This creates massive CSS files that then have to be transferred to your user.</p>
    <p>OO classes give you the ability to make presentation-related adjustments to content (and in our case, components) with the easy-to-remember class names listed below.</p>
  </section>

  <section>
    <h2>Space Management</h2>
    <ul>
      <li>padding</li>
      <li>margin</li>
      <li>grid</li>
      <li>flex?</li>
    </ul>
  </section>

  <section>
    <h2>Font Control</h2>

    <h3>Size</h3>

    <h3>Style</h3>

    <h3>Weight</h3>

    
    <ul>
      <li>font size</li>
      <li>font style</li>
      <li>font weight</li>
      <li>font color</li>
      <li>font deco</li>
      <li>font line height</li>
      <li>font treatments (pre-configured combinations of the above)</li>
    </ul>
  </section>

  <section>
    <h2></h2>
  </section>
</div>
<%- htmlWebpackPlugin.options.docsFoot %>
