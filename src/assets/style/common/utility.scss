@function is-list($var) {
  @return type-of($var) == 'list';
}

@each $name, $hex in $colors {
  $var: map-get($colors, $name);

  .#{$name},
  .color-#{$name} {
    color: $var;
    color: var(--#{$name});
  }

  .back-#{$name} {
    background-color: $var;
    background-color: var(--#{$name});
  }

  .hover-#{$name}:hover {
    color: $var;
    color: var(--#{$name});
  }

  .hover-back-#{$name}:hover {
    background-color: $var;
    background-color: var(--#{$name});
  }

  .border-#{$name} {
    border-color: $var;
    border-color: var(--#{$name});
  }

  .borders-#{$name} [class*=border-] {
    border-color: $var;
    border-color: var(--#{$name});
  }
}

[class*="hover-"] {
  transition: background-color 200ms $decel;
}

@each $mod, $prop in $box-model-mods {
  @if $mod=="pull" {
    $inv: "-";
  }

  @each $amt, $meas in $mod-amounts {
    .#{$mod}#{$amt} {
      #{$prop}: #{$inv}#{$meas};
    }

    @each $name, $edge in $edges {
      .#{$mod}-#{$name}#{$amt} {
        @each $act in $edge {
          #{$prop}#{$act}: #{$inv}#{$meas};
        }
      }
    }
  }
}

@each $name, $mod in $box-model-mods {
  .#{$name} {
    #{$mod}: #{$rem};
  }

  @each $edge, $actual in $edges {
    @if is-list($actual) {
      .#{$name}-#{$edge} {
        @each $side in $actual {
          #{$mod}#{$side}: #{$rem};
        }
      }
    }

    @else {
      .#{$name}-#{$edge} {
        #{$mod}#{$actual}: #{$rem};
      }
    }
  }
}

// need a PULL

@each $level, $size in $breakpoints {
  @media screen and (min-width: #{$size}) {
    @each $l, $s in $breakpoints {
      @if $l == $level {
        .#{$l}-only {
          display: initial;
        }
      }

      @else {
        .#{$l}-only {
          display: none;
        }
      }
    }
  }
}

@for $i from 1 through 100 {
  $rem: (0.1 * $i);
  .px-#{$i} {
    font-size: #{$rem}rem;
  }
  .lh-#{$i} {
    line-height: #{$rem}rem;
  }
}
